
<colors>
<<include etc/colors.conf>>
</colors>

<fonts>
<<include etc/fonts.conf>>
</fonts>

<<include ideogram.conf>>
<<include ticks.conf>>

karyotype   = data/10/karyotype.txt

<image>
dir = /home/martink/www/htdocs/tmp
file  = circos-tutorial.png
# radius of inscribed circle in image
radius         = 1500p
background     = white
# by default angle=0 is at 3 o'clock position
angle_offset   = -90

24bit = yes
png = yes
svg = yes

auto_alpha_colors = yes
auto_alpha_steps  = 5

image_map_use      = yes

# If a url uses a variable field, such as [id], and
# the corresponding parameter (e.g. id) is not defined,
# then
# - if image_map_strict=yes, Circos will exit
# - if image_map_strict=no (or not defined), url will not be used 
#      for that data point or data set
image_map_strict   = yes

# This is the name of the map, which will appear in the
# <map name="NAME"> tag of the map
image_map_name     = circosmap

# The image map will be written to this file. If this
# value is not defined, then the filename will be used
# with an html extension. If the file specified here
# does not have a directory component, the output
# directory defined by the dir parameter (see above)
# will be prefixed (i.e. the map and image will be
# created in the same directory).
image_map_file     = circos-tutorial.map

# If urls are not preceeded by a protocol, then this
# protocol will be automatically added to each url. This is
# not strictly necessary, since your browser will assume 
# that http is used. However, if you need https or some other
# protocol, this is the field to adjust.
image_map_protocol = http

# These values, when defined, will be added to each
# x,y coordinate of the map element boundary. These offsets
# are useful if the Circos image will be composited with
# another image, or cropped, or manipulated in any manner
# that shifts its original (0,0) (upper left) corner. You
# can define one or both values, and they can be negative.

#image_map_xshift = 0
#image_map_yshift = 0

# These factors will be used to multiply the x,y coordinates
# for each map element boundary. These parameters are useful
# if you are going to resize the image later. For example,
# if you create a 2000 x 2000 pixel image, but publish
# a 1000 x 1000 pixel image, set both factors to 0.5

#image_map_xfactor = 1
#image_map_yfactor = 1

# For debugging purposes, you can overlay the image map elements on
# top of the PNG image (not SVG). Each element in the overlay can have
# a fill color and stroke color. Note that if you add any x/y shift or
# multiplicative factors (above) then the overlay will reflect those
# factors.

image_map_overlay = yes
image_map_overlay_fill_color = lred_a4
image_map_overlay_stroke_color = red

</image>

chromosomes_units           = 1000000
chromosomes                 = hs1:0-50
chromosomes_display_default = no

<highlights>

z          = 0
fill_color = green
url        = script?start=[start]&end=[end]&chr=[chr]

# url is specified by the global url setting
# in the <highlights> block, above

<highlight>
file             = data/10/highlights.1.txt
r0               = 1.15r
r1               = 1.075r
fill_color       = blue
stroke_color     = dblue
stroke_thickness = 2
</highlight>

# url is specified within the <highlight> block, and
# it overrides the global url setting in the outer
# <highlights> block

<highlight>
file       = data/10/highlights.2.txt
r0         = 0.925r
r1         = 0.975r
url        = script?id=[id]&color=[fill_color]&r0=[r0]&r1=[r1]
</highlight>

# url is included with each data point, e.g.
# hs1 46486003 46541625 url=script?value=0.0401409

<highlight>
file       = data/10/highlights.3.txt
z          = 5
fill_color = red
ideogram   = yes
</highlight>

</highlights>

<plots>
<plot>
type = tile
file = data/10/tiles.2.txt
r0   = 0.81r
r1   = 0.92r
layers = 8
margin = 0.05u
layers_overflow = hide
orientation = out
thickness = 12
padding = 3
color = black
url = script?type=tile&id=[id]
</plot>

<plot>
type  = text
color = black
file  = data/10/text.2.txt
r0    = 0.6r
r1    = 0.8r

label_size = 18p
label_font = condensed

show_links     = yes
link_dims      = 0p,3p,5p,3p,3p
link_thickness = 2p
link_color     = red

padding        = 0p
rpadding       = 0p

label_snuggle         = yes
max_snuggle_distance  = 1r
snuggle_tolerance     = 0.25r
snuggle_sampling      = 5

url = script?type=label&id=[id]&text=[label]

<rules>
<rule>
importance = 10
condition  = _label_ =~ /M/
url        = M
</rule>
</rules>
</plot>

<plot>
type  = scatter
fill_color = black
glyph = square
glyph_size = 8p
file  = data/10/plotdata.1.txt
r0    = 0.55r
r1    = 0.6r
min   = -.1
max   = 1.1
background       = yes
background_color = vvlgrey
url = script?type=scatter-square&value=[value]&start=[start]&end=[end]
</plot>

<plot>
type  = scatter
fill_color = green
glyph = circle
glyph_size = 8p
file  = data/10/plotdata.3.txt
r0    = 0.55r
r1    = 0.6r
min   = -.1
max   = 1.1
url = script?type=scatter-circle&value=[value]&start=[start]&end=[end]
</plot>

<plot>
type  = histogram
fill_under = yes
fill_color = black
color = red
thickness = 2
file  = data/10/plotdata.1.txt
r0    = 0.5r
r1    = 0.55r
min   = 0
max   = 1
background       = yes
background_color = lgrey
url = script?type=label&value=[value]
</plot>
<plot>
type  = heatmap
color = vlblue,lblue,blue,dblue,vdblue
file  = data/10/plotdata.2.txt
r0    = 0.475r
r1    = 0.5r
min   = 0
max   = 1
url = script?type=label&value=[value]&color=[color]
</plot>
<plot>
type  = highlight
fill_color = green
file  = data/10/plotdata.4.txt
r0    = 0.425r
r1    = 0.45r
url = script?type=highlight&start=[start]&end=[end]
</plot>
</plots>

<links>
<link r>
file   = data/10/ribbon.1.txt
ribbon = yes
flat   = yes
color  = grey_a2
radius = 0.4r
bezier_radius = 0r
url    = script?type=ribbon&start=[start]&end=[end]
</link>
</links>

anglestep       = 0.5
minslicestep    = 10
beziersamples   = 40
debug           = no
warnings        = no
imagemap        = no

units_ok = bupr
units_nounit = n
